[{"/Users/tomaszkudlinski/Documents/Projects/pi/ui/src/index.tsx":"1","/Users/tomaszkudlinski/Documents/Projects/pi/ui/src/reportWebVitals.ts":"2","/Users/tomaszkudlinski/Documents/Projects/pi/ui/src/App.tsx":"3"},{"size":500,"mtime":1633792078298,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1633792078300,"results":"6","hashOfConfig":"5"},{"size":2709,"mtime":1633800720686,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6je2oh",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/tomaszkudlinski/Documents/Projects/pi/ui/src/index.tsx",[],"/Users/tomaszkudlinski/Documents/Projects/pi/ui/src/reportWebVitals.ts",[],"/Users/tomaszkudlinski/Documents/Projects/pi/ui/src/App.tsx",["15"],"import { useEffect, useReducer } from 'react'\nimport logo from './logo.svg'\nimport './App.css'\n\nenum STEP {\n  Idle,\n  WaitForStart,\n  WaitForPoints,\n  CaluculatePi,\n  ShowPi,\n}\n\nconst apiUrl = (count: number) => `http://localhost:3001/points?count=${count}`\n\ntype Point = [number, number]\n\ntype Points = Array<Point>\n\ninterface State {\n  step: STEP\n  points: Array<Array<number>>\n  orderedCount: number | null\n  piValue: number | null\n  error: string\n}\n\nconst initialState: State = {\n  step: STEP.Idle,\n  points: [],\n  orderedCount: null,\n  piValue: null,\n  error: '',\n}\n\ntype Action =\n  | { type: 'setCount'; count: number }\n  | { type: 'setWaitForPoints' }\n  | { type: 'setPoints'; points: Points }\n  | { type: 'setFailure'; error: string }\n  | { type: 'setPi'; piValue: number }\n\nfunction reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'setCount':\n      return { ...state, orderedCount: action.count, step: STEP.WaitForStart }\n    case 'setWaitForPoints':\n      return { ...state, step: STEP.WaitForPoints }\n    case 'setPoints':\n      return { ...state, points: action.points, step: STEP.CaluculatePi }\n    case 'setPi':\n      return { ...state, piValue: action.piValue, step: STEP.ShowPi }\n    case 'setFailure':\n      return { ...state, error: action.error, step: STEP.Idle }\n    default:\n      throw new Error()\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  useEffect(() => {\n    if (state.step === STEP.WaitForPoints && state.orderedCount)\n      fetch(apiUrl(state.orderedCount))\n        .then((data) => data.json())\n        .then((points) => {\n          if (Array.isArray(points)) {\n            dispatch({ type: 'setPoints', points })\n          }\n        })\n        .catch((err) => console.log('Sth went bad!'))\n  }, [state.step])\n\n  console.log('AAA state', state)\n\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <img src={logo} className='App-logo' alt='logo' />\n        {(state.step === STEP.Idle || state.step === STEP.WaitForStart) && (\n          <input\n            type='text'\n            pattern='[0-9]*'\n            value={state.orderedCount ?? ''}\n            onChange={(event) => {\n              const count = parseInt(event.target.value)\n              if (typeof count === 'number' && !isNaN(count)) {\n                dispatch({\n                  type: 'setCount',\n                  count,\n                })\n              }\n            }}\n          />\n        )}\n        <button\n          onClick={() => dispatch({ type: 'setWaitForPoints' })}\n          className='App-container'\n        >\n          Calculate!\n        </button>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n",{"ruleId":"16","severity":1,"message":"17","line":72,"column":6,"nodeType":"18","endLine":72,"endColumn":18,"suggestions":"19"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state.orderedCount'. Either include it or remove the dependency array.","ArrayExpression",["20"],{"desc":"21","fix":"22"},"Update the dependencies array to be: [state.orderedCount, state.step]",{"range":"23","text":"24"},[1796,1808],"[state.orderedCount, state.step]"]